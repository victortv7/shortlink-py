version: '3.7'
services:
  test-db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    ports:
      - "5433:5432"
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 2
  test-redis:
    image: redis:alpine
    restart: always
    ports:
      - "6380:6379"
    networks:
      - test-network
  test-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      test-db:
        condition: service_healthy
      test-redis:
        condition: service_started
    command: >
      bash -c "
        cd src && alembic upgrade head && cd .. &&
        uvicorn src.app.main:app --host 0.0.0.0 --port 8080
      "
    environment:
      - DB_HOST=test-db
      - REDIS_HOST=test-redis
    volumes:
      - .:/app
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 5s
      timeout: 2s
      retries: 2
  test-runner:
    build: .
    command: pytest tests/integration
    environment:
      - APP_HOST=test-app
      - APP_PORT=8080
    volumes:
      - .:/app
    depends_on:
      test-app:
        condition: service_healthy
    networks:
      - test-network

networks:
  test-network: